Index: View/liste_recette.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/View/liste_recette.html b/View/liste_recette.html
new file mode 100644
--- /dev/null	
+++ b/View/liste_recette.html	
@@ -0,0 +1,25 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <title>Liste fiches techniques</title>
+    <script src="../js/ListeRecette.js" defer></script>
+</head>
+    <body>
+        <div id="recherche">
+            <input name="barre_recherche_recette" id="barre_recherche_recette">
+        </div>
+
+        <div id="divTri">
+            <label>Trier par</label>
+            <select id="tri" name="tri">
+                <option value="nom_recette ASC">Ordre alphabétique(A-Z)</option>
+                <option value="nom_recette DESC">Ordre alphabétique(Z-A)</option>
+                <option value="nom_createur ASC">Ordre alphabétique(A-Z)</option>
+                <option value="nom_createur DESC">Ordre alphabétique(Z-A)</option>
+            </select>
+        </div>
+
+        <div id="listRecette"></div>
+    </body>
+</html>
\ No newline at end of file
Index: js/ListeRecette.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/js/ListeRecette.js b/js/ListeRecette.js
new file mode 100644
--- /dev/null	
+++ b/js/ListeRecette.js	
@@ -0,0 +1,85 @@
+let divList = document.getElementById("listRecette");
+
+let nom_recette;
+let nom_createur;
+
+let modifyingState = null;
+
+let order = "nom_recette ASC";
+let inputTri = document.getElementById("tri");
+
+inputTri.addEventListener("input", function () {
+    order = inputTri.value;
+    //TO implement for name
+    getAllRecette("1");
+});
+let input_barre_recherche_recette = document.getElementById("barre_recherche_recette");
+
+input_barre_recherche_recette.addEventListener("input",function () {
+    if (input_barre_recherche_recette.value.length >= 2){
+        getAllRecette(input_barre_recherche_recette.value);
+    }
+    else if (input_barre_recherche_recette.value.length === 0){
+        getAllRecette("1");
+    }
+});
+
+
+function getAllRecette(name) {
+    divList.innerText = "";
+    let url = "../API/getAllRecette.php?name="+ encodeURIComponent(name)+ "&order="+encodeURIComponent(order);
+    let requete = new XMLHttpRequest();
+    requete.open("GET", url, true);
+    requete.addEventListener("load", function () {
+        let result = JSON.parse(requete.responseText);
+        let table = document.createElement("table");
+        let trth = document.createElement("tr");
+        table.appendChild(trth);
+
+        let th_nom_recette = document.createElement("th");//nom_recette
+        th_nom_recette.innerText="Nom de la fiche technique";
+
+        let th_nom_createur = document.createElement("th");//nom_createur
+        th_nom_createur.innerText="Unité";
+
+        let th_supprimer = document.createElement("th");//supprimer
+
+        trth.appendChild(th_nom_recette);
+        trth.appendChild(th_nom_createur);
+        trth.appendChild(th_supprimer);
+
+        Array.prototype.forEach.call(result, val =>{
+            let tr = document.createElement("tr");
+            table.appendChild(tr);
+
+            let td_nom_recette = document.createElement("td");//nom_recette
+            td_nom_recette.innerText=val.nom_recette;
+
+            let td_nom_createur = document.createElement("td");//nom_createur
+            td_nom_createur.innerText=val.nom_createur;
+
+            let td_supprimer = document.createElement("th");//supprimer
+
+            let btnsuppr = document.createElement("button");
+
+            btnsuppr.innerText = "Supprimer";
+            btnsuppr.addEventListener("click", function () {
+                let url = "../API/supprimerRecette.php?id=" + encodeURIComponent(val.id_recette);
+                let requete = new XMLHttpRequest();
+                requete.open("GET", url, true);
+                requete.send(null);
+                getAllRecette("1");
+            });
+
+            td_supprimer.appendChild(btnsuppr);
+
+            tr.appendChild(td_nom_recette);
+            tr.appendChild(td_nom_recette);
+            tr.appendChild(td_supprimer);
+
+            table.appendChild(tr);
+        });
+        divList.appendChild(table);
+    });
+    requete.send(null);
+}
\ No newline at end of file
Index: API/getAllRecette.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/API/getAllRecette.php b/API/getAllRecette.php
new file mode 100644
--- /dev/null	
+++ b/API/getAllRecette.php	
@@ -0,0 +1,13 @@
+<?php
+
+require_once ("Model.php");
+
+$order = $_GET['order'];
+if ($_GET["name"]=="1"){
+    $tab = Model::getAllRecette(".*",$order);
+}else{
+    $name = $_GET["name"];
+    $tab = Model::getAllRecette($name,$order);
+}
+
+echo json_encode($tab);
\ No newline at end of file
Index: API/supprimerRecette.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/API/supprimerRecette.php b/API/supprimerRecette.php
new file mode 100644
--- /dev/null	
+++ b/API/supprimerRecette.php	
@@ -0,0 +1,7 @@
+<?php
+
+require_once ('Model.php');
+
+$id = $_GET["id"];
+
+Model::supprimerRecette($id);
\ No newline at end of file
